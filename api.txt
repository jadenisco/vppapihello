
Module: ip6_nd
  ------
  Method sw_interface_ip6nd_ra_config:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u8, suppress
    u8, managed
    u8, other
    u8, ll_option
    u8, send_unicast
    u8, cease
    bool, is_no
    u8, default_router
    u32, max_interval
    u32, min_interval
    u32, lifetime
    u32, initial_count
    u32, initial_interval
  ------
  Method sw_interface_ip6nd_ra_config_reply:
  Vars: None
  ------
  Method sw_interface_ip6nd_ra_prefix:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_prefix_t, prefix
    bool, use_default
    bool, no_advertise
    bool, off_link
    bool, no_autoconfig
    bool, no_onlink
    bool, is_no
    u32, val_lifetime
    u32, pref_lifetime
  ------
  Method sw_interface_ip6nd_ra_prefix_reply:
  Vars: None
  ------
  Method ip6nd_proxy_enable_disable:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, is_enable
  ------
  Method ip6nd_proxy_enable_disable_reply:
  Vars: None
  ------
  Method ip6nd_proxy_add_del:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, is_add
    vl_api_ip6_address_t, ip
  ------
  Method ip6nd_proxy_add_del_reply:
  Vars: None
  ------
  Method ip6nd_proxy_details:
  Vars: <type>, <variable>, [size]
    vl_api_ip6_address_t, ip
  ------
  Method ip6nd_proxy_dump:
  Vars: None
  ------
  Method ip6nd_send_router_solicitation:
  Vars: <type>, <variable>, [size]
    u32, irt
    u32, mrt
    u32, mrc
    u32, mrd
    vl_api_interface_index_t, sw_if_index
    bool, stop
  ------
  Method ip6nd_send_router_solicitation_reply:
  Vars: None
  ------
  Method want_ip6_ra_events:
  Vars: <type>, <variable>, [size]
    bool, enable
    u32, pid
  ------
  Method want_ip6_ra_events_reply:
  Vars: None
  ------
  Method ip6_ra_event:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_ip6_address_t, router_addr
    u8, current_hop_limit
    u8, flags
    u16, router_lifetime_in_sec
    u32, neighbor_reachable_time_in_msec
    u32, time_in_msec_between_retransmitted_neighbor_solicitations
    u32, n_prefixes
    vl_api_ip6_ra_prefix_info_t, prefixes, 0

Module: qos
  ------
  Method qos_store_enable_disable:
  Vars: <type>, <variable>, [size]
    bool, enable, {'default': 'true'}
    vl_api_qos_store_t, store
  ------
  Method qos_store_enable_disable_reply:
  Vars: None
  ------
  Method qos_store_dump:
  Vars: None
  ------
  Method qos_store_details:
  Vars: None
  ------
  Method qos_record_enable_disable:
  Vars: <type>, <variable>, [size]
    bool, enable, {'default': 'true'}
    vl_api_qos_record_t, record
  ------
  Method qos_record_enable_disable_reply:
  Vars: None
  ------
  Method qos_record_dump:
  Vars: None
  ------
  Method qos_record_details:
  Vars: None
  ------
  Method qos_egress_map_update:
  Vars: <type>, <variable>, [size]
    vl_api_qos_egress_map_t, map
  ------
  Method qos_egress_map_update_reply:
  Vars: None
  ------
  Method qos_egress_map_delete:
  Vars: <type>, <variable>, [size]
    u32, id
  ------
  Method qos_egress_map_delete_reply:
  Vars: None
  ------
  Method qos_egress_map_dump:
  Vars: None
  ------
  Method qos_egress_map_details:
  Vars: None
  ------
  Method qos_mark_enable_disable:
  Vars: <type>, <variable>, [size]
    bool, enable, {'default': 'true'}
    vl_api_qos_mark_t, mark
  ------
  Method qos_mark_enable_disable_reply:
  Vars: None
  ------
  Method qos_mark_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method qos_mark_details:
  Vars: None
  ------
  Method qos_mark_details_reply:
  Vars: None

Module: policer
  ------
  Method policer_bind:
  Vars: <type>, <variable>, [size]
    string, name, 64
    u32, worker_index
    bool, bind_enable
  ------
  Method policer_bind_reply:
  Vars: None
  ------
  Method policer_input:
  Vars: <type>, <variable>, [size]
    string, name, 64
    vl_api_interface_index_t, sw_if_index
    bool, apply
  ------
  Method policer_input_reply:
  Vars: None
  ------
  Method policer_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add
    string, name, 64
    u32, cir
    u32, eir
    u64, cb
    u64, eb
    vl_api_sse2_qos_rate_type_t, rate_type
    vl_api_sse2_qos_round_type_t, round_type
    vl_api_sse2_qos_policer_type_t, type
    bool, color_aware
    vl_api_sse2_qos_action_t, conform_action
    vl_api_sse2_qos_action_t, exceed_action
    vl_api_sse2_qos_action_t, violate_action
  ------
  Method policer_add_del_reply:
  Vars: <type>, <variable>, [size]
    u32, policer_index
  ------
  Method policer_dump:
  Vars: <type>, <variable>, [size]
    bool, match_name_valid
    string, match_name, 64
  ------
  Method policer_details:
  Vars: <type>, <variable>, [size]
    u32, cir
    u32, eir
    u64, cb
    u64, eb
    vl_api_sse2_qos_rate_type_t, rate_type
    vl_api_sse2_qos_round_type_t, round_type
    vl_api_sse2_qos_policer_type_t, type
    vl_api_sse2_qos_action_t, conform_action
    vl_api_sse2_qos_action_t, exceed_action
    vl_api_sse2_qos_action_t, violate_action
    bool, single_rate
    bool, color_aware
    u32, scale
    u32, cir_tokens_per_period
    u32, pir_tokens_per_period
    u32, current_limit
    u32, current_bucket
    u32, extended_limit
    u32, extended_bucket
    u64, last_update_time

Module: tapv2
  ------
  Method tap_create_v3:
  Vars: <type>, <variable>, [size]
    u32, id, {'default': 4294967295}
    bool, use_random_mac, {'default': 'true'}
    vl_api_mac_address_t, mac_address
    u16, num_rx_queues, {'default': 1}
    u16, num_tx_queues, {'default': 1}
    u16, tx_ring_sz, {'default': 256}
    u16, rx_ring_sz, {'default': 256}
    bool, host_mtu_set
    u32, host_mtu_size
    bool, host_mac_addr_set
    vl_api_mac_address_t, host_mac_addr
    bool, host_ip4_prefix_set
    vl_api_ip4_address_with_prefix_t, host_ip4_prefix
    bool, host_ip6_prefix_set
    vl_api_ip6_address_with_prefix_t, host_ip6_prefix
    bool, host_ip4_gw_set
    vl_api_ip4_address_t, host_ip4_gw
    bool, host_ip6_gw_set
    vl_api_ip6_address_t, host_ip6_gw
    vl_api_tap_flags_t, tap_flags
    bool, host_namespace_set
    string, host_namespace, 64
    bool, host_if_name_set
    string, host_if_name, 64
    bool, host_bridge_set
    string, host_bridge, 64
    string, tag, 0
  ------
  Method tap_create_v3_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method tap_create_v2:
  Vars: <type>, <variable>, [size]
    u32, id, {'default': 4294967295}
    bool, use_random_mac, {'default': 'true'}
    vl_api_mac_address_t, mac_address
    u8, num_rx_queues, {'default': 1}
    u16, tx_ring_sz, {'default': 256}
    u16, rx_ring_sz, {'default': 256}
    bool, host_mtu_set
    u32, host_mtu_size
    bool, host_mac_addr_set
    vl_api_mac_address_t, host_mac_addr
    bool, host_ip4_prefix_set
    vl_api_ip4_address_with_prefix_t, host_ip4_prefix
    bool, host_ip6_prefix_set
    vl_api_ip6_address_with_prefix_t, host_ip6_prefix
    bool, host_ip4_gw_set
    vl_api_ip4_address_t, host_ip4_gw
    bool, host_ip6_gw_set
    vl_api_ip6_address_t, host_ip6_gw
    vl_api_tap_flags_t, tap_flags
    bool, host_namespace_set
    string, host_namespace, 64
    bool, host_if_name_set
    string, host_if_name, 64
    bool, host_bridge_set
    string, host_bridge, 64
    string, tag, 0
  ------
  Method tap_create_v2_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method tap_delete_v2:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method tap_delete_v2_reply:
  Vars: None
  ------
  Method sw_interface_tap_v2_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
  ------
  Method sw_interface_tap_v2_details:
  Vars: <type>, <variable>, [size]
    u32, id
    u16, tx_ring_sz
    u16, rx_ring_sz
    u32, host_mtu_size
    vl_api_mac_address_t, host_mac_addr
    vl_api_ip4_address_with_prefix_t, host_ip4_prefix
    vl_api_ip6_address_with_prefix_t, host_ip6_prefix
    vl_api_tap_flags_t, tap_flags
    string, dev_name, 64
    string, host_if_name, 64
    string, host_namespace, 64
    string, host_bridge, 64

Module: bfd
  ------
  Method bfd_udp_set_echo_source:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method bfd_udp_set_echo_source_reply:
  Vars: None
  ------
  Method bfd_udp_del_echo_source:
  Vars: None
  ------
  Method bfd_udp_del_echo_source_reply:
  Vars: None
  ------
  Method bfd_udp_get_echo_source:
  Vars: None
  ------
  Method bfd_udp_get_echo_source_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, is_set
    bool, have_usable_ip4
    vl_api_ip4_address_t, ip4_addr
    bool, have_usable_ip6
    vl_api_ip6_address_t, ip6_addr
  ------
  Method bfd_udp_add:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, desired_min_tx
    u32, required_min_rx
    vl_api_address_t, local_addr
    vl_api_address_t, peer_addr
    u8, detect_mult
    bool, is_authenticated
    u8, bfd_key_id
    u32, conf_key_id
  ------
  Method bfd_udp_add_reply:
  Vars: None
  ------
  Method bfd_udp_mod:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, desired_min_tx
    u32, required_min_rx
    vl_api_address_t, local_addr
    vl_api_address_t, peer_addr
    u8, detect_mult
  ------
  Method bfd_udp_mod_reply:
  Vars: None
  ------
  Method bfd_udp_del:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_address_t, local_addr
    vl_api_address_t, peer_addr
  ------
  Method bfd_udp_del_reply:
  Vars: None
  ------
  Method bfd_udp_session_dump:
  Vars: None
  ------
  Method bfd_udp_session_details:
  Vars: <type>, <variable>, [size]
    vl_api_address_t, local_addr
    vl_api_address_t, peer_addr
    vl_api_bfd_state_t, state
    bool, is_authenticated
    u8, bfd_key_id
    u32, conf_key_id
    u32, required_min_rx
    u32, desired_min_tx
    u8, detect_mult
  ------
  Method bfd_udp_session_set_flags:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_address_t, local_addr
    vl_api_address_t, peer_addr
    vl_api_if_status_flags_t, flags
  ------
  Method bfd_udp_session_set_flags_reply:
  Vars: None
  ------
  Method want_bfd_events:
  Vars: <type>, <variable>, [size]
    bool, enable_disable
    u32, pid
  ------
  Method want_bfd_events_reply:
  Vars: None
  ------
  Method bfd_udp_session_event:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_address_t, local_addr
    vl_api_address_t, peer_addr
    vl_api_bfd_state_t, state
    bool, is_authenticated
    u8, bfd_key_id
    u32, conf_key_id
    u32, required_min_rx
    u32, desired_min_tx
    u8, detect_mult
  ------
  Method bfd_auth_set_key:
  Vars: <type>, <variable>, [size]
    u32, conf_key_id
    u8, key_len
    u8, auth_type
    u8, key, 20
  ------
  Method bfd_auth_set_key_reply:
  Vars: None
  ------
  Method bfd_auth_del_key:
  Vars: <type>, <variable>, [size]
    u32, conf_key_id
  ------
  Method bfd_auth_del_key_reply:
  Vars: None
  ------
  Method bfd_auth_keys_dump:
  Vars: None
  ------
  Method bfd_auth_keys_details:
  Vars: <type>, <variable>, [size]
    u32, use_count
    u8, auth_type
  ------
  Method bfd_udp_auth_activate:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_address_t, local_addr
    vl_api_address_t, peer_addr
    bool, is_delayed
    u8, bfd_key_id
    u32, conf_key_id
  ------
  Method bfd_udp_auth_activate_reply:
  Vars: None
  ------
  Method bfd_udp_auth_deactivate:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_address_t, local_addr
    vl_api_address_t, peer_addr
    bool, is_delayed
  ------
  Method bfd_udp_auth_deactivate_reply:
  Vars: None

Module: punt
  ------
  Method set_punt:
  Vars: <type>, <variable>, [size]
    bool, is_add
    vl_api_punt_t, punt
  ------
  Method set_punt_reply:
  Vars: None
  ------
  Method punt_socket_register:
  Vars: <type>, <variable>, [size]
    u32, header_version
    vl_api_punt_t, punt
    string, pathname, 108
  ------
  Method punt_socket_register_reply:
  Vars: <type>, <variable>, [size]
    string, pathname, 108
  ------
  Method punt_socket_dump:
  Vars: <type>, <variable>, [size]
    vl_api_punt_type_t, type
  ------
  Method punt_socket_details:
  Vars: <type>, <variable>, [size]
    string, pathname, 108
  ------
  Method punt_socket_deregister:
  Vars: <type>, <variable>, [size]
    vl_api_punt_t, punt
  ------
  Method punt_socket_deregister_reply:
  Vars: None
  ------
  Method punt_reason_dump:
  Vars: <type>, <variable>, [size]
    vl_api_punt_reason_t, reason
  ------
  Method punt_reason_details:
  Vars: None

Module: flow
  ------
  Method flow_add:
  Vars: <type>, <variable>, [size]
    vl_api_flow_rule_t, flow
  ------
  Method flow_add_reply:
  Vars: <type>, <variable>, [size]
    u32, flow_index
  ------
  Method flow_del:
  Vars: <type>, <variable>, [size]
    u32, flow_index
  ------
  Method flow_del_reply:
  Vars: None
  ------
  Method flow_enable:
  Vars: <type>, <variable>, [size]
    u32, flow_index
    u32, hw_if_index
  ------
  Method flow_enable_reply:
  Vars: None
  ------
  Method flow_disable:
  Vars: <type>, <variable>, [size]
    u32, flow_index
    u32, hw_if_index
  ------
  Method flow_disable_reply:
  Vars: None

Module: ipsec
  ------
  Method ipsec_spd_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add
    u32, spd_id
  ------
  Method ipsec_spd_add_del_reply:
  Vars: None
  ------
  Method ipsec_interface_add_del_spd:
  Vars: <type>, <variable>, [size]
    bool, is_add
    vl_api_interface_index_t, sw_if_index
    u32, spd_id
  ------
  Method ipsec_interface_add_del_spd_reply:
  Vars: None
  ------
  Method ipsec_spd_entry_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add
    vl_api_ipsec_spd_entry_t, entry
  ------
  Method ipsec_spd_entry_add_del_reply:
  Vars: <type>, <variable>, [size]
    u32, stat_index
  ------
  Method ipsec_spds_dump:
  Vars: None
  ------
  Method ipsec_spds_details:
  Vars: <type>, <variable>, [size]
    u32, npolicies
  ------
  Method ipsec_spd_dump:
  Vars: <type>, <variable>, [size]
    u32, spd_id
    u32, sa_id
  ------
  Method ipsec_spd_details:
  Vars: None
  ------
  Method ipsec_sad_entry_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add
    vl_api_ipsec_sad_entry_t, entry
  ------
  Method ipsec_sad_entry_add_del_v2:
  Vars: <type>, <variable>, [size]
    bool, is_add
    vl_api_ipsec_sad_entry_v2_t, entry
  ------
  Method ipsec_sad_entry_add_del_v3:
  Vars: <type>, <variable>, [size]
    bool, is_add
    vl_api_ipsec_sad_entry_v3_t, entry
  ------
  Method ipsec_sad_entry_add:
  Vars: <type>, <variable>, [size]
    vl_api_ipsec_sad_entry_v3_t, entry
  ------
  Method ipsec_sad_entry_del:
  Vars: <type>, <variable>, [size]
    u32, id
  ------
  Method ipsec_sad_entry_del_reply:
  Vars: None
  ------
  Method ipsec_sad_entry_add_del_reply:
  Vars: <type>, <variable>, [size]
    u32, stat_index
  ------
  Method ipsec_sad_entry_add_del_v2_reply:
  Vars: <type>, <variable>, [size]
    u32, stat_index
  ------
  Method ipsec_sad_entry_add_del_v3_reply:
  Vars: <type>, <variable>, [size]
    u32, stat_index
  ------
  Method ipsec_sad_entry_add_reply:
  Vars: <type>, <variable>, [size]
    u32, stat_index
  ------
  Method ipsec_tunnel_protect_update:
  Vars: <type>, <variable>, [size]
    vl_api_ipsec_tunnel_protect_t, tunnel
  ------
  Method ipsec_tunnel_protect_update_reply:
  Vars: None
  ------
  Method ipsec_tunnel_protect_del:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_address_t, nh
  ------
  Method ipsec_tunnel_protect_del_reply:
  Vars: None
  ------
  Method ipsec_tunnel_protect_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method ipsec_tunnel_protect_details:
  Vars: None
  ------
  Method ipsec_spd_interface_dump:
  Vars: <type>, <variable>, [size]
    u32, spd_index
    u8, spd_index_valid
  ------
  Method ipsec_spd_interface_details:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method ipsec_itf_create:
  Vars: <type>, <variable>, [size]
    vl_api_ipsec_itf_t, itf
  ------
  Method ipsec_itf_create_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method ipsec_itf_delete:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method ipsec_itf_delete_reply:
  Vars: None
  ------
  Method ipsec_itf_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method ipsec_itf_details:
  Vars: None
  ------
  Method ipsec_sa_dump:
  Vars: <type>, <variable>, [size]
    u32, sa_id
  ------
  Method ipsec_sa_v2_dump:
  Vars: <type>, <variable>, [size]
    u32, sa_id
  ------
  Method ipsec_sa_v3_dump:
  Vars: <type>, <variable>, [size]
    u32, sa_id
  ------
  Method ipsec_sa_details:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, salt
    u64, seq_outbound
    u64, last_seq_inbound
    u64, replay_window
    u32, stat_index
  ------
  Method ipsec_sa_v2_details:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, salt
    u64, seq_outbound
    u64, last_seq_inbound
    u64, replay_window
    u32, stat_index
  ------
  Method ipsec_sa_v3_details:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u64, seq_outbound
    u64, last_seq_inbound
    u64, replay_window
    u32, stat_index
  ------
  Method ipsec_backend_dump:
  Vars: None
  ------
  Method ipsec_backend_details:
  Vars: <type>, <variable>, [size]
    vl_api_ipsec_proto_t, protocol
    u8, index
    bool, active
  ------
  Method ipsec_select_backend:
  Vars: <type>, <variable>, [size]
    vl_api_ipsec_proto_t, protocol
    u8, index
  ------
  Method ipsec_select_backend_reply:
  Vars: None
  ------
  Method ipsec_set_async_mode:
  Vars: <type>, <variable>, [size]
    bool, async_enable
  ------
  Method ipsec_set_async_mode_reply:
  Vars: None

Module: classify
  ------
  Method classify_add_del_table:
  Vars: <type>, <variable>, [size]
    bool, is_add
    bool, del_chain
    u32, table_index, {'default': 4294967295}
    u32, nbuckets, {'default': 2}
    u32, memory_size, {'default': 2097152}
    u32, skip_n_vectors, {'default': 0}
    u32, match_n_vectors, {'default': 1}
    u32, next_table_index, {'default': 4294967295}
    u32, miss_next_index, {'default': 4294967295}
    u8, current_data_flag, {'default': 0}
    i16, current_data_offset, {'default': 0}
    u32, mask_len
    u8, mask, 0
  ------
  Method classify_add_del_table_reply:
  Vars: <type>, <variable>, [size]
    u32, new_table_index
    u32, skip_n_vectors
    u32, match_n_vectors
  ------
  Method classify_add_del_session:
  Vars: <type>, <variable>, [size]
    bool, is_add
    u32, table_index
    u32, hit_next_index, {'default': 4294967295}
    u32, opaque_index, {'default': 4294967295}
    i32, advance, {'default': 0}
    vl_api_classify_action_t, action, {'default': 0}
    u32, metadata, {'default': 0}
    u32, match_len
    u8, match, 0
  ------
  Method classify_add_del_session_reply:
  Vars: None
  ------
  Method policer_classify_set_interface:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, ip4_table_index
    u32, ip6_table_index
    u32, l2_table_index
    bool, is_add
  ------
  Method policer_classify_set_interface_reply:
  Vars: None
  ------
  Method policer_classify_dump:
  Vars: <type>, <variable>, [size]
    vl_api_policer_classify_table_t, type
    vl_api_interface_index_t, sw_if_index
  ------
  Method policer_classify_details:
  Vars: <type>, <variable>, [size]
    u32, table_index
  ------
  Method classify_table_ids:
  Vars: None
  ------
  Method classify_table_ids_reply:
  Vars: <type>, <variable>, [size]
    u32, count
    u32, ids, 0
  ------
  Method classify_table_by_interface:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method classify_table_by_interface_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, l2_table_id
    u32, ip4_table_id
    u32, ip6_table_id
  ------
  Method classify_table_info:
  Vars: <type>, <variable>, [size]
    u32, table_id
  ------
  Method classify_table_info_reply:
  Vars: <type>, <variable>, [size]
    u32, table_id
    u32, nbuckets
    u32, match_n_vectors
    u32, skip_n_vectors
    u32, active_sessions
    u32, next_table_index
    u32, miss_next_index
    u32, mask_length
    u8, mask, 0
  ------
  Method classify_session_dump:
  Vars: <type>, <variable>, [size]
    u32, table_id
  ------
  Method classify_session_details:
  Vars: <type>, <variable>, [size]
    u32, table_id
    u32, hit_next_index
    i32, advance
    u32, opaque_index
    u32, match_length
    u8, match, 0
  ------
  Method flow_classify_set_interface:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, ip4_table_index
    u32, ip6_table_index
    bool, is_add
  ------
  Method flow_classify_set_interface_reply:
  Vars: None
  ------
  Method flow_classify_dump:
  Vars: <type>, <variable>, [size]
    vl_api_flow_classify_table_t, type
    vl_api_interface_index_t, sw_if_index
  ------
  Method flow_classify_details:
  Vars: <type>, <variable>, [size]
    u32, table_index
  ------
  Method classify_set_interface_ip_table:
  Vars: <type>, <variable>, [size]
    bool, is_ipv6
    vl_api_interface_index_t, sw_if_index
    u32, table_index
  ------
  Method classify_set_interface_ip_table_reply:
  Vars: None
  ------
  Method classify_set_interface_l2_tables:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, ip4_table_index
    u32, ip6_table_index
    u32, other_table_index
    bool, is_input
  ------
  Method classify_set_interface_l2_tables_reply:
  Vars: None
  ------
  Method input_acl_set_interface:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, ip4_table_index
    u32, ip6_table_index
    u32, l2_table_index
    bool, is_add
  ------
  Method input_acl_set_interface_reply:
  Vars: None
  ------
  Method punt_acl_add_del:
  Vars: <type>, <variable>, [size]
    u32, ip4_table_index, {'default': 4294967295}
    u32, ip6_table_index, {'default': 4294967295}
    bool, is_add, {'default': 'true'}
  ------
  Method punt_acl_add_del_reply:
  Vars: None
  ------
  Method output_acl_set_interface:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, ip4_table_index
    u32, ip6_table_index
    u32, l2_table_index
    bool, is_add
  ------
  Method output_acl_set_interface_reply:
  Vars: None
  ------
  Method classify_pcap_lookup_table:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
    u32, skip_n_vectors, {'default': 0}
    u32, match_n_vectors, {'default': 1}
    u32, mask_len
    u8, mask, 0
  ------
  Method classify_pcap_lookup_table_reply:
  Vars: <type>, <variable>, [size]
    u32, table_index
  ------
  Method classify_pcap_set_table:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, table_index, {'default': 4294967295}
    bool, sort_masks, {'default': 0}
  ------
  Method classify_pcap_set_table_reply:
  Vars: <type>, <variable>, [size]
    u32, table_index
  ------
  Method classify_pcap_get_tables:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method classify_pcap_get_tables_reply:
  Vars: <type>, <variable>, [size]
    u32, count
    u32, indices, 0
  ------
  Method classify_trace_lookup_table:
  Vars: <type>, <variable>, [size]
    u32, skip_n_vectors, {'default': 0}
    u32, match_n_vectors, {'default': 1}
    u32, mask_len
    u8, mask, 0
  ------
  Method classify_trace_lookup_table_reply:
  Vars: <type>, <variable>, [size]
    u32, table_index
  ------
  Method classify_trace_set_table:
  Vars: <type>, <variable>, [size]
    u32, table_index, {'default': 4294967295}
    bool, sort_masks, {'default': 0}
  ------
  Method classify_trace_set_table_reply:
  Vars: <type>, <variable>, [size]
    u32, table_index
  ------
  Method classify_trace_get_tables:
  Vars: None
  ------
  Method classify_trace_get_tables_reply:
  Vars: <type>, <variable>, [size]
    u32, count
    u32, indices, 0

Module: vlib
  ------
  Method cli:
  Vars: <type>, <variable>, [size]
    u64, cmd_in_shmem
  ------
  Method cli_inband:
  Vars: <type>, <variable>, [size]
    string, cmd, 0
  ------
  Method cli_reply:
  Vars: <type>, <variable>, [size]
    u64, reply_in_shmem
  ------
  Method cli_inband_reply:
  Vars: <type>, <variable>, [size]
    string, reply, 0
  ------
  Method get_node_index:
  Vars: <type>, <variable>, [size]
    string, node_name, 64
  ------
  Method get_node_index_reply:
  Vars: <type>, <variable>, [size]
    u32, node_index
  ------
  Method add_node_next:
  Vars: <type>, <variable>, [size]
    string, node_name, 64
    string, next_name, 64
  ------
  Method add_node_next_reply:
  Vars: <type>, <variable>, [size]
    u32, next_index
  ------
  Method show_threads:
  Vars: None
  ------
  Method show_threads_reply:
  Vars: <type>, <variable>, [size]
    u32, count
    vl_api_thread_data_t, thread_data, 0
  ------
  Method get_node_graph:
  Vars: None
  ------
  Method get_node_graph_reply:
  Vars: <type>, <variable>, [size]
    u64, reply_in_shmem
  ------
  Method get_next_index:
  Vars: <type>, <variable>, [size]
    string, node_name, 64
    string, next_name, 64
  ------
  Method get_next_index_reply:
  Vars: <type>, <variable>, [size]
    u32, next_index
  ------
  Method get_f64_endian_value:
  Vars: <type>, <variable>, [size]
    f64, f64_one, {'default': 1.0}
  ------
  Method get_f64_endian_value_reply:
  Vars: <type>, <variable>, [size]
    f64, f64_one_result
  ------
  Method get_f64_increment_by_one:
  Vars: <type>, <variable>, [size]
    f64, f64_value, {'default': 1.0}
  ------
  Method get_f64_increment_by_one_reply:
  Vars: <type>, <variable>, [size]
    f64, f64_value

Module: virtio
  ------
  Method virtio_pci_create:
  Vars: <type>, <variable>, [size]
    vl_api_pci_address_t, pci_addr
    bool, use_random_mac
    vl_api_mac_address_t, mac_address
    bool, gso_enabled
    bool, checksum_offload_enabled
    u64, features
  ------
  Method virtio_pci_create_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method virtio_pci_create_v2:
  Vars: <type>, <variable>, [size]
    vl_api_pci_address_t, pci_addr
    bool, use_random_mac
    vl_api_mac_address_t, mac_address
    vl_api_virtio_flags_t, virtio_flags
    u64, features
  ------
  Method virtio_pci_create_v2_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method virtio_pci_delete:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method virtio_pci_delete_reply:
  Vars: None
  ------
  Method sw_interface_virtio_pci_dump:
  Vars: None
  ------
  Method sw_interface_virtio_pci_details:
  Vars: <type>, <variable>, [size]
    vl_api_pci_address_t, pci_addr
    vl_api_mac_address_t, mac_addr
    u16, tx_ring_sz
    u16, rx_ring_sz
    u64, features

Module: vxlan
  ------
  Method vxlan_add_del_tunnel:
  Vars: <type>, <variable>, [size]
    bool, is_add, {'default': 'true'}
    u32, instance
    vl_api_address_t, src_address
    vl_api_address_t, dst_address
    vl_api_interface_index_t, mcast_sw_if_index
    u32, encap_vrf_id
    u32, decap_next_index
    u32, vni
  ------
  Method vxlan_add_del_tunnel_v2:
  Vars: <type>, <variable>, [size]
    bool, is_add, {'default': 'true'}
    u32, instance, {'default': 4294967295}
    vl_api_address_t, src_address
    vl_api_address_t, dst_address
    u16, src_port
    u16, dst_port
    vl_api_interface_index_t, mcast_sw_if_index
    u32, encap_vrf_id
    u32, decap_next_index
    u32, vni
  ------
  Method vxlan_add_del_tunnel_v3:
  Vars: <type>, <variable>, [size]
    bool, is_add, {'default': 'true'}
    u32, instance, {'default': 4294967295}
    vl_api_address_t, src_address
    vl_api_address_t, dst_address
    u16, src_port
    u16, dst_port
    vl_api_interface_index_t, mcast_sw_if_index
    u32, encap_vrf_id
    u32, decap_next_index
    u32, vni
    bool, is_l3, {'default': False}
  ------
  Method vxlan_add_del_tunnel_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method vxlan_add_del_tunnel_v2_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method vxlan_add_del_tunnel_v3_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method vxlan_tunnel_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method vxlan_tunnel_v2_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method vxlan_tunnel_details:
  Vars: <type>, <variable>, [size]
    u32, instance
    vl_api_address_t, src_address
    vl_api_address_t, dst_address
    vl_api_interface_index_t, mcast_sw_if_index
    u32, encap_vrf_id
    u32, decap_next_index
    u32, vni
  ------
  Method vxlan_tunnel_v2_details:
  Vars: <type>, <variable>, [size]
    u32, instance
    vl_api_address_t, src_address
    vl_api_address_t, dst_address
    u16, src_port
    u16, dst_port
    vl_api_interface_index_t, mcast_sw_if_index
    u32, encap_vrf_id
    u32, decap_next_index
    u32, vni
  ------
  Method sw_interface_set_vxlan_bypass:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, is_ipv6
    bool, enable, {'default': 'true'}
  ------
  Method sw_interface_set_vxlan_bypass_reply:
  Vars: None
  ------
  Method vxlan_offload_rx:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, hw_if_index
    vl_api_interface_index_t, sw_if_index
    bool, enable, {'default': 'true'}
  ------
  Method vxlan_offload_rx_reply:
  Vars: None

Module: mpls
  ------
  Method mpls_ip_bind_unbind:
  Vars: <type>, <variable>, [size]
    u32, mb_mpls_table_id
    u32, mb_label
    u32, mb_ip_table_id
    bool, mb_is_bind
    vl_api_prefix_t, mb_prefix
  ------
  Method mpls_ip_bind_unbind_reply:
  Vars: None
  ------
  Method mpls_tunnel_add_del:
  Vars: <type>, <variable>, [size]
    bool, mt_is_add, {'default': 'true'}
    vl_api_mpls_tunnel_t, mt_tunnel
  ------
  Method mpls_tunnel_add_del_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, tunnel_index
  ------
  Method mpls_tunnel_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
  ------
  Method mpls_tunnel_details:
  Vars: None
  ------
  Method mpls_table_add_del:
  Vars: <type>, <variable>, [size]
    bool, mt_is_add, {'default': 'true'}
    vl_api_mpls_table_t, mt_table
  ------
  Method mpls_table_add_del_reply:
  Vars: None
  ------
  Method mpls_table_dump:
  Vars: None
  ------
  Method mpls_table_details:
  Vars: None
  ------
  Method mpls_route_add_del:
  Vars: <type>, <variable>, [size]
    bool, mr_is_add
    bool, mr_is_multipath
    vl_api_mpls_route_t, mr_route
  ------
  Method mpls_route_add_del_reply:
  Vars: <type>, <variable>, [size]
    u32, stats_index
  ------
  Method mpls_route_dump:
  Vars: <type>, <variable>, [size]
    vl_api_mpls_table_t, table
  ------
  Method mpls_route_details:
  Vars: None
  ------
  Method sw_interface_set_mpls_enable:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, enable, {'default': 'true'}
  ------
  Method sw_interface_set_mpls_enable_reply:
  Vars: None

Module: feature
  ------
  Method feature_enable_disable:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, enable
    string, arc_name, 64
    string, feature_name, 64
  ------
  Method feature_enable_disable_reply:
  Vars: None

Module: ip_neighbor
  ------
  Method ip_neighbor_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add
    vl_api_ip_neighbor_t, neighbor
  ------
  Method ip_neighbor_add_del_reply:
  Vars: <type>, <variable>, [size]
    u32, stats_index
  ------
  Method ip_neighbor_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
    vl_api_address_family_t, af
  ------
  Method ip_neighbor_details:
  Vars: <type>, <variable>, [size]
    vl_api_ip_neighbor_t, neighbor
  ------
  Method ip_neighbor_config:
  Vars: <type>, <variable>, [size]
    vl_api_address_family_t, af
    u32, max_number
    u32, max_age
    bool, recycle
  ------
  Method ip_neighbor_config_reply:
  Vars: None
  ------
  Method ip_neighbor_replace_begin:
  Vars: None
  ------
  Method ip_neighbor_replace_begin_reply:
  Vars: None
  ------
  Method ip_neighbor_replace_end:
  Vars: None
  ------
  Method ip_neighbor_replace_end_reply:
  Vars: None
  ------
  Method ip_neighbor_flush:
  Vars: <type>, <variable>, [size]
    vl_api_address_family_t, af
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
  ------
  Method ip_neighbor_flush_reply:
  Vars: None
  ------
  Method want_ip_neighbor_events:
  Vars: <type>, <variable>, [size]
    bool, enable
    u32, pid
    vl_api_address_t, ip
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
  ------
  Method want_ip_neighbor_events_reply:
  Vars: None
  ------
  Method ip_neighbor_event:
  Vars: <type>, <variable>, [size]
    vl_api_ip_neighbor_t, neighbor
  ------
  Method want_ip_neighbor_events_v2:
  Vars: <type>, <variable>, [size]
    bool, enable
    u32, pid
    vl_api_address_t, ip
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
  ------
  Method want_ip_neighbor_events_v2_reply:
  Vars: None
  ------
  Method ip_neighbor_event_v2:
  Vars: <type>, <variable>, [size]
    vl_api_ip_neighbor_event_flags_t, flags
    vl_api_ip_neighbor_t, neighbor

Module: gre
  ------
  Method gre_tunnel_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add
    vl_api_gre_tunnel_t, tunnel
  ------
  Method gre_tunnel_add_del_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method gre_tunnel_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method gre_tunnel_details:
  Vars: None

Module: af_packet
  ------
  Method af_packet_create:
  Vars: <type>, <variable>, [size]
    vl_api_mac_address_t, hw_addr
    bool, use_random_hw_addr
    string, host_if_name, 64
  ------
  Method af_packet_create_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method af_packet_create_v2:
  Vars: <type>, <variable>, [size]
    vl_api_mac_address_t, hw_addr
    bool, use_random_hw_addr
    string, host_if_name, 64
    u32, rx_frame_size
    u32, tx_frame_size
    u32, rx_frames_per_block
    u32, tx_frames_per_block
    u32, flags
    u16, num_rx_queues, {'default': 1}
  ------
  Method af_packet_create_v2_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method af_packet_delete:
  Vars: <type>, <variable>, [size]
    string, host_if_name, 64
  ------
  Method af_packet_delete_reply:
  Vars: None
  ------
  Method af_packet_set_l4_cksum_offload:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, set
  ------
  Method af_packet_set_l4_cksum_offload_reply:
  Vars: None
  ------
  Method af_packet_dump:
  Vars: None
  ------
  Method af_packet_details:
  Vars: <type>, <variable>, [size]
    string, host_if_name, 64

Module: l2
  ------
  Method l2_xconnect_details:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, tx_sw_if_index
  ------
  Method l2_xconnect_dump:
  Vars: None
  ------
  Method l2_fib_table_details:
  Vars: <type>, <variable>, [size]
    vl_api_mac_address_t, mac
    vl_api_interface_index_t, sw_if_index
    bool, static_mac
    bool, filter_mac
    bool, bvi_mac
  ------
  Method l2_fib_table_dump:
  Vars: <type>, <variable>, [size]
    u32, bd_id
  ------
  Method l2_fib_clear_table:
  Vars: None
  ------
  Method l2_fib_clear_table_reply:
  Vars: None
  ------
  Method l2fib_flush_all:
  Vars: None
  ------
  Method l2fib_flush_all_reply:
  Vars: None
  ------
  Method l2fib_flush_bd:
  Vars: <type>, <variable>, [size]
    u32, bd_id
  ------
  Method l2fib_flush_bd_reply:
  Vars: None
  ------
  Method l2fib_flush_int:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method l2fib_flush_int_reply:
  Vars: None
  ------
  Method l2fib_add_del:
  Vars: <type>, <variable>, [size]
    vl_api_mac_address_t, mac
    u32, bd_id
    vl_api_interface_index_t, sw_if_index
    bool, is_add, {'default': 'true'}
    bool, static_mac
    bool, filter_mac
    bool, bvi_mac
  ------
  Method l2fib_add_del_reply:
  Vars: None
  ------
  Method want_l2_macs_events:
  Vars: <type>, <variable>, [size]
    u32, learn_limit, {'default': 1000}
    u8, scan_delay, {'default': 10}
    u8, max_macs_in_event, {'default': 10}
    bool, enable_disable, {'default': 'true'}
    u32, pid
  ------
  Method want_l2_macs_events_reply:
  Vars: None
  ------
  Method want_l2_macs_events2:
  Vars: <type>, <variable>, [size]
    u8, max_macs_in_event, {'default': 10}
    bool, enable_disable, {'default': 'true'}
    u32, pid
  ------
  Method want_l2_macs_events2_reply:
  Vars: None
  ------
  Method l2fib_set_scan_delay:
  Vars: <type>, <variable>, [size]
    u16, scan_delay, {'default': 10}
  ------
  Method l2fib_set_scan_delay_reply:
  Vars: None
  ------
  Method l2_macs_event:
  Vars: <type>, <variable>, [size]
    u32, n_macs
    vl_api_mac_entry_t, mac, 0
  ------
  Method l2_flags:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, is_set
    u32, feature_bitmap
  ------
  Method l2_flags_reply:
  Vars: <type>, <variable>, [size]
    u32, resulting_feature_bitmap
  ------
  Method bridge_domain_set_mac_age:
  Vars: <type>, <variable>, [size]
    u32, bd_id
    u8, mac_age
  ------
  Method bridge_domain_set_mac_age_reply:
  Vars: None
  ------
  Method bridge_domain_set_default_learn_limit:
  Vars: <type>, <variable>, [size]
    u32, learn_limit
  ------
  Method bridge_domain_set_default_learn_limit_reply:
  Vars: None
  ------
  Method bridge_domain_set_learn_limit:
  Vars: <type>, <variable>, [size]
    u32, bd_id
    u32, learn_limit
  ------
  Method bridge_domain_set_learn_limit_reply:
  Vars: None
  ------
  Method bridge_domain_add_del:
  Vars: <type>, <variable>, [size]
    u32, bd_id
    bool, flood
    bool, uu_flood
    bool, forward
    bool, learn
    bool, arp_term
    bool, arp_ufwd
    u8, mac_age
    string, bd_tag, 64
    bool, is_add, {'default': 'true'}
  ------
  Method bridge_domain_add_del_reply:
  Vars: None
  ------
  Method bridge_domain_dump:
  Vars: <type>, <variable>, [size]
    u32, bd_id, {'default': 4294967295}
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
  ------
  Method bridge_domain_details:
  Vars: <type>, <variable>, [size]
    bool, flood
    bool, uu_flood
    bool, forward
    bool, learn
    bool, arp_term
    bool, arp_ufwd
    u8, mac_age
    string, bd_tag, 64
    vl_api_interface_index_t, bvi_sw_if_index
    vl_api_interface_index_t, uu_fwd_sw_if_index
    u32, n_sw_ifs
    vl_api_bridge_domain_sw_if_t, sw_if_details, 0
  ------
  Method bridge_flags:
  Vars: <type>, <variable>, [size]
    u32, bd_id
    bool, is_set
    vl_api_bd_flags_t, flags
  ------
  Method bridge_flags_reply:
  Vars: <type>, <variable>, [size]
    u32, resulting_feature_bitmap
  ------
  Method l2_interface_vlan_tag_rewrite:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, vtr_op
    u32, push_dot1q
    u32, tag1
    u32, tag2
  ------
  Method l2_interface_vlan_tag_rewrite_reply:
  Vars: None
  ------
  Method l2_interface_pbb_tag_rewrite:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, vtr_op
    u16, outer_tag
    vl_api_mac_address_t, b_dmac
    vl_api_mac_address_t, b_smac
    u16, b_vlanid
    u32, i_sid
  ------
  Method l2_interface_pbb_tag_rewrite_reply:
  Vars: None
  ------
  Method l2_patch_add_del:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, rx_sw_if_index
    vl_api_interface_index_t, tx_sw_if_index
    bool, is_add, {'default': 'true'}
  ------
  Method l2_patch_add_del_reply:
  Vars: None
  ------
  Method sw_interface_set_l2_xconnect:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, rx_sw_if_index
    vl_api_interface_index_t, tx_sw_if_index
    bool, enable, {'default': 'true'}
  ------
  Method sw_interface_set_l2_xconnect_reply:
  Vars: None
  ------
  Method sw_interface_set_l2_bridge:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, rx_sw_if_index
    u32, bd_id
    vl_api_l2_port_type_t, port_type
    u8, shg
    bool, enable, {'default': 'true'}
  ------
  Method sw_interface_set_l2_bridge_reply:
  Vars: None
  ------
  Method bd_ip_mac_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add, {'default': 'true'}
    vl_api_bd_ip_mac_t, entry
  ------
  Method bd_ip_mac_add_del_reply:
  Vars: None
  ------
  Method bd_ip_mac_flush:
  Vars: <type>, <variable>, [size]
    u32, bd_id
  ------
  Method bd_ip_mac_flush_reply:
  Vars: None
  ------
  Method bd_ip_mac_details:
  Vars: None
  ------
  Method bd_ip_mac_dump:
  Vars: <type>, <variable>, [size]
    u32, bd_id
  ------
  Method l2_interface_efp_filter:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, enable_disable, {'default': 'true'}
  ------
  Method l2_interface_efp_filter_reply:
  Vars: None
  ------
  Method sw_interface_set_vpath:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, enable, {'default': 4294967295}
  ------
  Method sw_interface_set_vpath_reply:
  Vars: None
  ------
  Method bvi_create:
  Vars: <type>, <variable>, [size]
    vl_api_mac_address_t, mac
    u32, user_instance, {'default': 4294967295}
  ------
  Method bvi_create_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method bvi_delete:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method bvi_delete_reply:
  Vars: None
  ------
  Method want_l2_arp_term_events:
  Vars: <type>, <variable>, [size]
    bool, enable
    u32, pid
  ------
  Method want_l2_arp_term_events_reply:
  Vars: None
  ------
  Method l2_arp_term_event:
  Vars: <type>, <variable>, [size]
    vl_api_address_t, ip
    vl_api_interface_index_t, sw_if_index
    vl_api_mac_address_t, mac

Module: ip
  ------
  Method ip_table_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add, {'default': 'true'}
    vl_api_ip_table_t, table
  ------
  Method ip_table_add_del_reply:
  Vars: None
  ------
  Method ip_table_allocate:
  Vars: <type>, <variable>, [size]
    vl_api_ip_table_t, table
  ------
  Method ip_table_allocate_reply:
  Vars: <type>, <variable>, [size]
    vl_api_ip_table_t, table
  ------
  Method ip_table_dump:
  Vars: None
  ------
  Method ip_table_replace_begin:
  Vars: <type>, <variable>, [size]
    vl_api_ip_table_t, table
  ------
  Method ip_table_replace_begin_reply:
  Vars: None
  ------
  Method ip_table_replace_end:
  Vars: <type>, <variable>, [size]
    vl_api_ip_table_t, table
  ------
  Method ip_table_replace_end_reply:
  Vars: None
  ------
  Method ip_table_flush:
  Vars: <type>, <variable>, [size]
    vl_api_ip_table_t, table
  ------
  Method ip_table_flush_reply:
  Vars: None
  ------
  Method ip_table_details:
  Vars: None
  ------
  Method ip_route_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add, {'default': 'true'}
    bool, is_multipath
    vl_api_ip_route_t, route
  ------
  Method ip_route_add_del_v2:
  Vars: <type>, <variable>, [size]
    bool, is_add, {'default': 'true'}
    bool, is_multipath
    vl_api_ip_route_v2_t, route
  ------
  Method ip_route_add_del_reply:
  Vars: <type>, <variable>, [size]
    u32, stats_index
  ------
  Method ip_route_add_del_v2_reply:
  Vars: <type>, <variable>, [size]
    u32, stats_index
  ------
  Method ip_route_dump:
  Vars: <type>, <variable>, [size]
    vl_api_ip_table_t, table
  ------
  Method ip_route_v2_dump:
  Vars: <type>, <variable>, [size]
    u8, src
    vl_api_ip_table_t, table
  ------
  Method ip_route_details:
  Vars: None
  ------
  Method ip_route_v2_details:
  Vars: None
  ------
  Method ip_route_lookup:
  Vars: <type>, <variable>, [size]
    u32, table_id
    u8, exact
    vl_api_prefix_t, prefix
  ------
  Method ip_route_lookup_v2:
  Vars: <type>, <variable>, [size]
    u32, table_id
    u8, exact
    vl_api_prefix_t, prefix
  ------
  Method ip_route_lookup_reply:
  Vars: <type>, <variable>, [size]
    vl_api_ip_route_t, route
  ------
  Method ip_route_lookup_v2_reply:
  Vars: <type>, <variable>, [size]
    vl_api_ip_route_v2_t, route
  ------
  Method set_ip_flow_hash:
  Vars: <type>, <variable>, [size]
    u32, vrf_id
    bool, is_ipv6
    bool, src
    bool, dst
    bool, sport
    bool, dport
    bool, proto
    bool, reverse
    bool, symmetric
  ------
  Method set_ip_flow_hash_reply:
  Vars: None
  ------
  Method set_ip_flow_hash_v2:
  Vars: <type>, <variable>, [size]
    u32, table_id
    vl_api_address_family_t, af
    vl_api_ip_flow_hash_config_t, flow_hash_config
  ------
  Method set_ip_flow_hash_v2_reply:
  Vars: None
  ------
  Method set_ip_flow_hash_router_id:
  Vars: <type>, <variable>, [size]
    u32, router_id
  ------
  Method set_ip_flow_hash_router_id_reply:
  Vars: None
  ------
  Method sw_interface_ip6_enable_disable:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, enable
  ------
  Method sw_interface_ip6_enable_disable_reply:
  Vars: None
  ------
  Method ip_mtable_dump:
  Vars: None
  ------
  Method ip_mtable_details:
  Vars: <type>, <variable>, [size]
    vl_api_ip_table_t, table
  ------
  Method ip_mroute_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add, {'default': 'true'}
    bool, is_multipath
    vl_api_ip_mroute_t, route
  ------
  Method ip_mroute_add_del_reply:
  Vars: <type>, <variable>, [size]
    u32, stats_index
  ------
  Method ip_mroute_dump:
  Vars: <type>, <variable>, [size]
    vl_api_ip_table_t, table
  ------
  Method ip_mroute_details:
  Vars: None
  ------
  Method ip_address_details:
  Vars: <type>, <variable>, [size]
    vl_api_address_with_prefix_t, prefix
  ------
  Method ip_address_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, is_ipv6
  ------
  Method ip_unnumbered_details:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, ip_sw_if_index
  ------
  Method ip_unnumbered_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
  ------
  Method ip_details:
  Vars: <type>, <variable>, [size]
    bool, is_ipv6
  ------
  Method ip_dump:
  Vars: <type>, <variable>, [size]
    bool, is_ipv6
  ------
  Method mfib_signal_dump:
  Vars: None
  ------
  Method mfib_signal_details:
  Vars: <type>, <variable>, [size]
    u32, table_id
    vl_api_mprefix_t, prefix
    u16, ip_packet_len
    u8, ip_packet_data, 256
  ------
  Method ip_punt_police:
  Vars: <type>, <variable>, [size]
    u32, policer_index
    bool, is_add, {'default': 'true'}
    bool, is_ip6
  ------
  Method ip_punt_police_reply:
  Vars: None
  ------
  Method ip_punt_redirect:
  Vars: <type>, <variable>, [size]
    vl_api_punt_redirect_t, punt
    bool, is_add, {'default': 'true'}
  ------
  Method ip_punt_redirect_reply:
  Vars: None
  ------
  Method ip_punt_redirect_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, is_ipv6
  ------
  Method ip_punt_redirect_details:
  Vars: None
  ------
  Method add_del_ip_punt_redirect_v2:
  Vars: <type>, <variable>, [size]
    bool, is_add, {'default': 'true'}
    vl_api_punt_redirect_v2_t, punt
  ------
  Method add_del_ip_punt_redirect_v2_reply:
  Vars: None
  ------
  Method ip_punt_redirect_v2_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_address_family_t, af
  ------
  Method ip_punt_redirect_v2_details:
  Vars: None
  ------
  Method ip_container_proxy_add_del:
  Vars: <type>, <variable>, [size]
    vl_api_prefix_t, pfx
    vl_api_interface_index_t, sw_if_index
    bool, is_add, {'default': 'true'}
  ------
  Method ip_container_proxy_add_del_reply:
  Vars: None
  ------
  Method ip_container_proxy_dump:
  Vars: None
  ------
  Method ip_container_proxy_details:
  Vars: <type>, <variable>, [size]
    vl_api_prefix_t, prefix
  ------
  Method ip_source_and_port_range_check_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add, {'default': 'true'}
    vl_api_prefix_t, prefix
    u8, number_of_ranges
    u16, low_ports, 32
    u16, high_ports, 32
    u32, vrf_id
  ------
  Method ip_source_and_port_range_check_add_del_reply:
  Vars: None
  ------
  Method ip_source_and_port_range_check_interface_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add, {'default': 'true'}
    vl_api_interface_index_t, sw_if_index
    u32, tcp_in_vrf_id
    u32, tcp_out_vrf_id
    u32, udp_in_vrf_id
    u32, udp_out_vrf_id
  ------
  Method ip_source_and_port_range_check_interface_add_del_reply:
  Vars: None
  ------
  Method sw_interface_ip6_set_link_local_address:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_ip6_address_t, ip
  ------
  Method sw_interface_ip6_set_link_local_address_reply:
  Vars: None
  ------
  Method sw_interface_ip6_get_link_local_address:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method sw_interface_ip6_get_link_local_address_reply:
  Vars: <type>, <variable>, [size]
    vl_api_ip6_address_t, ip
  ------
  Method ioam_enable:
  Vars: <type>, <variable>, [size]
    u16, id
    bool, seqno
    bool, analyse
    bool, pot_enable
    bool, trace_enable
    u32, node_id
  ------
  Method ioam_enable_reply:
  Vars: None
  ------
  Method ioam_disable:
  Vars: <type>, <variable>, [size]
    u16, id
  ------
  Method ioam_disable_reply:
  Vars: None
  ------
  Method ip_reassembly_set:
  Vars: <type>, <variable>, [size]
    u32, timeout_ms
    u32, max_reassemblies
    u32, max_reassembly_length
    u32, expire_walk_interval_ms
    bool, is_ip6
    vl_api_ip_reass_type_t, type
  ------
  Method ip_reassembly_set_reply:
  Vars: None
  ------
  Method ip_reassembly_get:
  Vars: <type>, <variable>, [size]
    bool, is_ip6
    vl_api_ip_reass_type_t, type
  ------
  Method ip_reassembly_get_reply:
  Vars: <type>, <variable>, [size]
    u32, timeout_ms
    u32, max_reassemblies
    u32, max_reassembly_length
    u32, expire_walk_interval_ms
    bool, is_ip6
  ------
  Method ip_reassembly_enable_disable:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, enable_ip4
    bool, enable_ip6
    vl_api_ip_reass_type_t, type
  ------
  Method ip_reassembly_enable_disable_reply:
  Vars: None
  ------
  Method ip_path_mtu_update:
  Vars: <type>, <variable>, [size]
    vl_api_ip_path_mtu_t, pmtu
  ------
  Method ip_path_mtu_update_reply:
  Vars: None
  ------
  Method ip_path_mtu_get:
  Vars: <type>, <variable>, [size]
    u32, cursor
  ------
  Method ip_path_mtu_get_reply:
  Vars: <type>, <variable>, [size]
    u32, cursor
  ------
  Method ip_path_mtu_details:
  Vars: None
  ------
  Method ip_path_mtu_replace_begin:
  Vars: None
  ------
  Method ip_path_mtu_replace_begin_reply:
  Vars: None
  ------
  Method ip_path_mtu_replace_end:
  Vars: None
  ------
  Method ip_path_mtu_replace_end_reply:
  Vars: None

Module: fib
  ------
  Method fib_source_add:
  Vars: <type>, <variable>, [size]
    vl_api_fib_source_t, src
  ------
  Method fib_source_add_reply:
  Vars: <type>, <variable>, [size]
    u8, id
  ------
  Method fib_source_dump:
  Vars: None
  ------
  Method fib_source_details:
  Vars: None

Module: pg
  ------
  Method pg_create_interface:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, interface_id
    bool, gso_enabled
    u32, gso_size
  ------
  Method pg_create_interface_v2:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, interface_id
    bool, gso_enabled
    u32, gso_size
    vl_api_pg_interface_mode_t, mode
  ------
  Method pg_create_interface_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method pg_create_interface_v2_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method pg_interface_enable_disable_coalesce:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, coalesce_enabled
  ------
  Method pg_interface_enable_disable_coalesce_reply:
  Vars: None
  ------
  Method pg_capture:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, interface_id
    bool, is_enabled, {'default': 'true'}
    u32, count
    string, pcap_file_name, 0
  ------
  Method pg_capture_reply:
  Vars: None
  ------
  Method pg_enable_disable:
  Vars: <type>, <variable>, [size]
    bool, is_enabled, {'default': 'true'}
    string, stream_name, 0
  ------
  Method pg_enable_disable_reply:
  Vars: None

Module: gso
  ------
  Method feature_gso_enable_disable:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, enable_disable
  ------
  Method feature_gso_enable_disable_reply:
  Vars: None

Module: vxlan_gpe
  ------
  Method vxlan_gpe_add_del_tunnel:
  Vars: <type>, <variable>, [size]
    vl_api_address_t, local
    vl_api_address_t, remote
    vl_api_interface_index_t, mcast_sw_if_index
    u32, encap_vrf_id
    u32, decap_vrf_id
    vl_api_ip_proto_t, protocol
    u32, vni
    bool, is_add, {'default': 'true'}
  ------
  Method vxlan_gpe_add_del_tunnel_v2:
  Vars: <type>, <variable>, [size]
    vl_api_address_t, local
    vl_api_address_t, remote
    u16, local_port
    u16, remote_port
    vl_api_interface_index_t, mcast_sw_if_index
    u32, encap_vrf_id
    u32, decap_vrf_id
    vl_api_ip_proto_t, protocol
    u32, vni
    bool, is_add, {'default': 'true'}
  ------
  Method vxlan_gpe_add_del_tunnel_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method vxlan_gpe_add_del_tunnel_v2_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method vxlan_gpe_tunnel_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method vxlan_gpe_tunnel_v2_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method vxlan_gpe_tunnel_details:
  Vars: <type>, <variable>, [size]
    vl_api_address_t, local
    vl_api_address_t, remote
    u32, vni
    vl_api_ip_proto_t, protocol
    vl_api_interface_index_t, mcast_sw_if_index
    u32, encap_vrf_id
    u32, decap_vrf_id
    bool, is_ipv6
  ------
  Method vxlan_gpe_tunnel_v2_details:
  Vars: <type>, <variable>, [size]
    vl_api_address_t, local
    vl_api_address_t, remote
    u16, local_port
    u16, remote_port
    u32, vni
    vl_api_ip_proto_t, protocol
    vl_api_interface_index_t, mcast_sw_if_index
    u32, encap_vrf_id
    u32, decap_vrf_id
    bool, is_ipv6
  ------
  Method sw_interface_set_vxlan_gpe_bypass:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, is_ipv6
    bool, enable, {'default': 'true'}
  ------
  Method sw_interface_set_vxlan_gpe_bypass_reply:
  Vars: None

Module: udp
  ------
  Method udp_encap_add:
  Vars: <type>, <variable>, [size]
    vl_api_udp_encap_t, udp_encap
  ------
  Method udp_encap_add_reply:
  Vars: <type>, <variable>, [size]
    u32, id
  ------
  Method udp_encap_del:
  Vars: <type>, <variable>, [size]
    u32, id
  ------
  Method udp_encap_del_reply:
  Vars: None
  ------
  Method udp_encap_dump:
  Vars: None
  ------
  Method udp_encap_details:
  Vars: None
  ------
  Method udp_decap_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add
    vl_api_udp_decap_t, udp_decap
  ------
  Method udp_decap_add_del_reply:
  Vars: None

Module: arp
  ------
  Method proxy_arp_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add
    vl_api_proxy_arp_t, proxy
  ------
  Method proxy_arp_add_del_reply:
  Vars: None
  ------
  Method proxy_arp_dump:
  Vars: None
  ------
  Method proxy_arp_details:
  Vars: None
  ------
  Method proxy_arp_intfc_enable_disable:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, enable
  ------
  Method proxy_arp_intfc_enable_disable_reply:
  Vars: None
  ------
  Method proxy_arp_intfc_dump:
  Vars: None
  ------
  Method proxy_arp_intfc_details:
  Vars: None

Module: p2p_ethernet
  ------
  Method p2p_ethernet_add:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, parent_if_index
    u32, subif_id
    vl_api_mac_address_t, remote_mac
  ------
  Method p2p_ethernet_add_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method p2p_ethernet_del:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, parent_if_index
    vl_api_mac_address_t, remote_mac
  ------
  Method p2p_ethernet_del_reply:
  Vars: None

Module: rd_cp
  ------
  Method ip6_nd_address_autoconfig:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, enable
    bool, install_default_routes
  ------
  Method ip6_nd_address_autoconfig_reply:
  Vars: None

Module: ipip
  ------
  Method ipip_add_tunnel:
  Vars: <type>, <variable>, [size]
    vl_api_ipip_tunnel_t, tunnel
  ------
  Method ipip_add_tunnel_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method ipip_del_tunnel:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method ipip_del_tunnel_reply:
  Vars: None
  ------
  Method ipip_6rd_add_tunnel:
  Vars: <type>, <variable>, [size]
    u32, ip6_table_id
    u32, ip4_table_id
    vl_api_ip6_prefix_t, ip6_prefix
    vl_api_ip4_prefix_t, ip4_prefix
    vl_api_ip4_address_t, ip4_src
    bool, security_check
    u8, tc_tos
  ------
  Method ipip_6rd_add_tunnel_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method ipip_6rd_del_tunnel:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method ipip_6rd_del_tunnel_reply:
  Vars: None
  ------
  Method ipip_tunnel_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method ipip_tunnel_details:
  Vars: None

Module: vhost_user
  ------
  Method create_vhost_user_if:
  Vars: <type>, <variable>, [size]
    bool, is_server
    string, sock_filename, 256
    bool, renumber
    bool, disable_mrg_rxbuf
    bool, disable_indirect_desc
    bool, enable_gso
    bool, enable_packed
    u32, custom_dev_instance
    bool, use_custom_mac
    vl_api_mac_address_t, mac_address
    string, tag, 64
  ------
  Method create_vhost_user_if_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method modify_vhost_user_if:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, is_server
    string, sock_filename, 256
    bool, renumber
    bool, enable_gso
    bool, enable_packed
    u32, custom_dev_instance
  ------
  Method modify_vhost_user_if_reply:
  Vars: None
  ------
  Method create_vhost_user_if_v2:
  Vars: <type>, <variable>, [size]
    bool, is_server
    string, sock_filename, 256
    bool, renumber
    bool, disable_mrg_rxbuf
    bool, disable_indirect_desc
    bool, enable_gso
    bool, enable_packed
    bool, enable_event_idx
    u32, custom_dev_instance
    bool, use_custom_mac
    vl_api_mac_address_t, mac_address
    string, tag, 64
  ------
  Method create_vhost_user_if_v2_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method modify_vhost_user_if_v2:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, is_server
    string, sock_filename, 256
    bool, renumber
    bool, enable_gso
    bool, enable_packed
    bool, enable_event_idx
    u32, custom_dev_instance
  ------
  Method modify_vhost_user_if_v2_reply:
  Vars: None
  ------
  Method delete_vhost_user_if:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method delete_vhost_user_if_reply:
  Vars: None
  ------
  Method sw_interface_vhost_user_details:
  Vars: <type>, <variable>, [size]
    string, interface_name, 64
    u32, virtio_net_hdr_sz
    vl_api_virtio_net_features_first_32_t, features_first_32
    vl_api_virtio_net_features_last_32_t, features_last_32
    bool, is_server
    string, sock_filename, 256
    u32, num_regions
    i32, sock_errno
  ------
  Method sw_interface_vhost_user_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}

Module: sr_mpls
  ------
  Method sr_mpls_policy_add:
  Vars: <type>, <variable>, [size]
    u32, bsid
    u32, weight
    bool, is_spray
    u8, n_segments
    u32, segments, 0
  ------
  Method sr_mpls_policy_add_reply:
  Vars: None
  ------
  Method sr_mpls_policy_mod:
  Vars: <type>, <variable>, [size]
    u32, bsid
    vl_api_sr_policy_op_t, operation
    u32, sl_index
    u32, weight
    u8, n_segments
    u32, segments, 0
  ------
  Method sr_mpls_policy_mod_reply:
  Vars: None
  ------
  Method sr_mpls_policy_del:
  Vars: <type>, <variable>, [size]
    u32, bsid
  ------
  Method sr_mpls_policy_del_reply:
  Vars: None
  ------
  Method sr_mpls_steering_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_del, {'default': False}
    u32, bsid
    u32, table_id
    vl_api_prefix_t, prefix
    u32, mask_width
    vl_api_address_t, next_hop
    u32, color
    u8, co_bits
    u32, vpn_label
  ------
  Method sr_mpls_steering_add_del_reply:
  Vars: None
  ------
  Method sr_mpls_policy_assign_endpoint_color:
  Vars: <type>, <variable>, [size]
    u32, bsid
    vl_api_address_t, endpoint
    u32, color
  ------
  Method sr_mpls_policy_assign_endpoint_color_reply:
  Vars: None

Module: syslog
  ------
  Method syslog_set_sender:
  Vars: <type>, <variable>, [size]
    vl_api_ip4_address_t, src_address
    vl_api_ip4_address_t, collector_address
    u16, collector_port, {'default': 514}
    u32, vrf_id
    u32, max_msg_size, {'default': 480}
  ------
  Method syslog_set_sender_reply:
  Vars: None
  ------
  Method syslog_get_sender:
  Vars: None
  ------
  Method syslog_get_sender_reply:
  Vars: <type>, <variable>, [size]
    vl_api_ip4_address_t, src_address
    vl_api_ip4_address_t, collector_address
    u16, collector_port
    u32, vrf_id
    u32, max_msg_size
  ------
  Method syslog_set_filter:
  Vars: <type>, <variable>, [size]
    vl_api_syslog_severity_t, severity
  ------
  Method syslog_set_filter_reply:
  Vars: None
  ------
  Method syslog_get_filter:
  Vars: None
  ------
  Method syslog_get_filter_reply:
  Vars: <type>, <variable>, [size]
    vl_api_syslog_severity_t, severity

Module: tcp
  ------
  Method tcp_configure_src_addresses:
  Vars: <type>, <variable>, [size]
    u32, vrf_id
    vl_api_address_t, first_address
    vl_api_address_t, last_address
  ------
  Method tcp_configure_src_addresses_reply:
  Vars: None

Module: span
  ------
  Method sw_interface_span_enable_disable:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index_from
    vl_api_interface_index_t, sw_if_index_to
    vl_api_span_state_t, state
    bool, is_l2
  ------
  Method sw_interface_span_enable_disable_reply:
  Vars: None
  ------
  Method sw_interface_span_dump:
  Vars: <type>, <variable>, [size]
    bool, is_l2
  ------
  Method sw_interface_span_details:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index_to
    vl_api_span_state_t, state
    bool, is_l2

Module: sr
  ------
  Method sr_localsid_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_del, {'default': False}
    vl_api_ip6_address_t, localsid
    bool, end_psp
    vl_api_sr_behavior_t, behavior
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
    u32, vlan_index
    u32, fib_table
    vl_api_address_t, nh_addr
  ------
  Method sr_localsid_add_del_reply:
  Vars: None
  ------
  Method sr_policy_add:
  Vars: <type>, <variable>, [size]
    vl_api_ip6_address_t, bsid_addr
    u32, weight
    bool, is_encap
    bool, is_spray
    u32, fib_table
    vl_api_srv6_sid_list_t, sids
  ------
  Method sr_policy_add_reply:
  Vars: None
  ------
  Method sr_policy_mod:
  Vars: <type>, <variable>, [size]
    vl_api_ip6_address_t, bsid_addr
    u32, sr_policy_index
    u32, fib_table
    vl_api_sr_policy_op_t, operation
    u32, sl_index
    u32, weight
    vl_api_srv6_sid_list_t, sids
  ------
  Method sr_policy_mod_reply:
  Vars: None
  ------
  Method sr_policy_del:
  Vars: <type>, <variable>, [size]
    vl_api_ip6_address_t, bsid_addr
    u32, sr_policy_index
  ------
  Method sr_policy_del_reply:
  Vars: None
  ------
  Method sr_set_encap_source:
  Vars: <type>, <variable>, [size]
    vl_api_ip6_address_t, encaps_source
  ------
  Method sr_set_encap_source_reply:
  Vars: None
  ------
  Method sr_set_encap_hop_limit:
  Vars: <type>, <variable>, [size]
    u8, hop_limit
  ------
  Method sr_set_encap_hop_limit_reply:
  Vars: None
  ------
  Method sr_steering_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_del, {'default': False}
    vl_api_ip6_address_t, bsid_addr
    u32, sr_policy_index
    u32, table_id
    vl_api_prefix_t, prefix
    vl_api_interface_index_t, sw_if_index
    vl_api_sr_steer_t, traffic_type
  ------
  Method sr_steering_add_del_reply:
  Vars: None
  ------
  Method sr_localsids_dump:
  Vars: None
  ------
  Method sr_localsids_details:
  Vars: <type>, <variable>, [size]
    bool, end_psp
    vl_api_sr_behavior_t, behavior
    u32, fib_table
    u32, vlan_index
    vl_api_address_t, xconnect_nh_addr
    u32, xconnect_iface_or_vrf_table
  ------
  Method sr_policies_dump:
  Vars: None
  ------
  Method sr_policies_details:
  Vars: <type>, <variable>, [size]
    bool, is_spray
    bool, is_encap
    u32, fib_table
    u8, num_sid_lists
    vl_api_srv6_sid_list_t, sid_lists, 0
  ------
  Method sr_policies_with_sl_index_dump:
  Vars: None
  ------
  Method sr_policies_with_sl_index_details:
  Vars: <type>, <variable>, [size]
    bool, is_spray
    bool, is_encap
    u32, fib_table
    u8, num_sid_lists
    vl_api_srv6_sid_list_with_sl_index_t, sid_lists, 0
  ------
  Method sr_steering_pol_dump:
  Vars: None
  ------
  Method sr_steering_pol_details:
  Vars: <type>, <variable>, [size]
    u32, fib_table
    vl_api_prefix_t, prefix
    vl_api_interface_index_t, sw_if_index
    vl_api_ip6_address_t, bsid

Module: vpe
  ------
  Method show_version:
  Vars: None
  ------
  Method show_version_reply:
  Vars: <type>, <variable>, [size]
    string, program, 32
    string, version, 32
    string, build_date, 32
    string, build_directory, 256
  ------
  Method show_vpe_system_time:
  Vars: None
  ------
  Method show_vpe_system_time_reply:
  Vars: <type>, <variable>, [size]
    vl_api_timestamp_t, vpe_system_time
  ------
  Method log_dump:
  Vars: <type>, <variable>, [size]
    vl_api_timestamp_t, start_timestamp
  ------
  Method log_details:
  Vars: <type>, <variable>, [size]
    vl_api_log_level_t, level
    string, msg_class, 32
    string, message, 256

Module: bond
  ------
  Method bond_create:
  Vars: <type>, <variable>, [size]
    u32, id, {'default': 4294967295}
    bool, use_custom_mac
    vl_api_mac_address_t, mac_address
    vl_api_bond_mode_t, mode
    vl_api_bond_lb_algo_t, lb
    bool, numa_only
  ------
  Method bond_create_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method bond_create2:
  Vars: <type>, <variable>, [size]
    vl_api_bond_mode_t, mode
    vl_api_bond_lb_algo_t, lb
    bool, numa_only
    bool, enable_gso
    bool, use_custom_mac
    vl_api_mac_address_t, mac_address
    u32, id, {'default': 4294967295}
  ------
  Method bond_create2_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method bond_delete:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method bond_delete_reply:
  Vars: None
  ------
  Method bond_enslave:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_interface_index_t, bond_sw_if_index
    bool, is_passive
    bool, is_long_timeout
  ------
  Method bond_enslave_reply:
  Vars: None
  ------
  Method bond_add_member:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_interface_index_t, bond_sw_if_index
    bool, is_passive
    bool, is_long_timeout
  ------
  Method bond_add_member_reply:
  Vars: None
  ------
  Method bond_detach_slave:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method bond_detach_slave_reply:
  Vars: None
  ------
  Method bond_detach_member:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method bond_detach_member_reply:
  Vars: None
  ------
  Method sw_interface_bond_dump:
  Vars: None
  ------
  Method sw_interface_bond_details:
  Vars: <type>, <variable>, [size]
    u32, id
    vl_api_bond_mode_t, mode
    vl_api_bond_lb_algo_t, lb
    bool, numa_only
    u32, active_slaves
    u32, slaves
    string, interface_name, 64
  ------
  Method sw_bond_interface_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
  ------
  Method sw_bond_interface_details:
  Vars: <type>, <variable>, [size]
    u32, id
    vl_api_bond_mode_t, mode
    vl_api_bond_lb_algo_t, lb
    bool, numa_only
    u32, active_members
    u32, members
    string, interface_name, 64
  ------
  Method sw_interface_slave_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method sw_interface_slave_details:
  Vars: <type>, <variable>, [size]
    string, interface_name, 64
    bool, is_passive
    bool, is_long_timeout
    bool, is_local_numa
    u32, weight
  ------
  Method sw_member_interface_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method sw_member_interface_details:
  Vars: <type>, <variable>, [size]
    string, interface_name, 64
    bool, is_passive
    bool, is_long_timeout
    bool, is_local_numa
    u32, weight
  ------
  Method sw_interface_set_bond_weight:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, weight
  ------
  Method sw_interface_set_bond_weight_reply:
  Vars: None

Module: bier
  ------
  Method bier_table_add_del:
  Vars: <type>, <variable>, [size]
    vl_api_bier_table_id_t, bt_tbl_id
    u32, bt_label
    bool, bt_is_add
  ------
  Method bier_table_add_del_reply:
  Vars: None
  ------
  Method bier_table_dump:
  Vars: None
  ------
  Method bier_table_details:
  Vars: <type>, <variable>, [size]
    vl_api_bier_table_id_t, bt_tbl_id
  ------
  Method bier_route_add_del:
  Vars: <type>, <variable>, [size]
    bool, br_is_add
    bool, br_is_replace
    vl_api_bier_route_t, br_route
  ------
  Method bier_route_add_del_reply:
  Vars: None
  ------
  Method bier_route_dump:
  Vars: <type>, <variable>, [size]
    vl_api_bier_table_id_t, br_tbl_id
  ------
  Method bier_route_details:
  Vars: None
  ------
  Method bier_imp_add:
  Vars: <type>, <variable>, [size]
    vl_api_bier_table_id_t, bi_tbl_id
    u16, bi_src
    u8, bi_n_bytes
    u8, bi_bytes, 0
  ------
  Method bier_imp_add_reply:
  Vars: <type>, <variable>, [size]
    u32, bi_index
  ------
  Method bier_imp_del:
  Vars: <type>, <variable>, [size]
    u32, bi_index
  ------
  Method bier_imp_del_reply:
  Vars: None
  ------
  Method bier_imp_dump:
  Vars: None
  ------
  Method bier_imp_details:
  Vars: <type>, <variable>, [size]
    u16, bi_src
    u8, bi_n_bytes
    u8, bi_bytes, 0
  ------
  Method bier_disp_table_add_del:
  Vars: <type>, <variable>, [size]
    u32, bdt_tbl_id
    bool, bdt_is_add
  ------
  Method bier_disp_table_add_del_reply:
  Vars: None
  ------
  Method bier_disp_table_dump:
  Vars: None
  ------
  Method bier_disp_table_details:
  Vars: None
  ------
  Method bier_disp_entry_add_del:
  Vars: <type>, <variable>, [size]
    u16, bde_bp
    u32, bde_tbl_id
    bool, bde_is_add
    u8, bde_payload_proto
    u8, bde_n_paths
    vl_api_fib_path_t, bde_paths, 0
  ------
  Method bier_disp_entry_add_del_reply:
  Vars: None
  ------
  Method bier_disp_entry_dump:
  Vars: <type>, <variable>, [size]
    u32, bde_tbl_id
  ------
  Method bier_disp_entry_details:
  Vars: <type>, <variable>, [size]
    u32, bde_tbl_id
    bool, bde_is_add
    u8, bde_payload_proto
    u8, bde_n_paths
    vl_api_fib_path_t, bde_paths, 0

Module: memclnt
  ------
  Method memclnt_create:
  Vars: <type>, <variable>, [size]
    u64, input_queue
    string, name, 64
    u32, api_versions, 8
  ------
  Method memclnt_create_reply:
  Vars: <type>, <variable>, [size]
    u64, handle
    u32, index
    u64, message_table
  ------
  Method memclnt_delete:
  Vars: <type>, <variable>, [size]
    bool, do_cleanup
  ------
  Method memclnt_delete_reply:
  Vars: None
  ------
  Method rx_thread_exit:
  Vars: None
  ------
  Method memclnt_rx_thread_suspend:
  Vars: None
  ------
  Method memclnt_read_timeout:
  Vars: None
  ------
  Method rpc_call:
  Vars: <type>, <variable>, [size]
    u64, function
    u8, multicast
    u8, need_barrier_sync
    u8, send_reply
    u32, data_len
    u8, data, 0
  ------
  Method rpc_call_reply:
  Vars: None
  ------
  Method get_first_msg_id:
  Vars: <type>, <variable>, [size]
    string, name, 64
  ------
  Method get_first_msg_id_reply:
  Vars: <type>, <variable>, [size]
    u16, first_msg_id
  ------
  Method api_versions:
  Vars: None
  ------
  Method api_versions_reply:
  Vars: <type>, <variable>, [size]
    u32, count
    vl_api_module_version_t, api_versions, 0
  ------
  Method trace_plugin_msg_ids:
  Vars: <type>, <variable>, [size]
    string, plugin_name, 128
    u16, first_msg_id
    u16, last_msg_id
  ------
  Method sockclnt_create:
  Vars: None
  ------
  Method sockclnt_create_reply:
  Vars: <type>, <variable>, [size]
    i32, response
    u32, index
    u16, count
    vl_api_message_table_entry_t, message_table, 0
  ------
  Method sockclnt_delete:
  Vars: <type>, <variable>, [size]
    u32, index
  ------
  Method sockclnt_delete_reply:
  Vars: None
  ------
  Method sock_init_shm:
  Vars: <type>, <variable>, [size]
    u32, requested_size
    u8, nitems
    u64, configs, 0
  ------
  Method sock_init_shm_reply:
  Vars: None
  ------
  Method memclnt_keepalive:
  Vars: None
  ------
  Method memclnt_keepalive_reply:
  Vars: None
  ------
  Method control_ping:
  Vars: None
  ------
  Method control_ping_reply:
  Vars: <type>, <variable>, [size]
    u32, client_index
    u32, vpe_pid

Module: ipfix_export
  ------
  Method set_ipfix_exporter:
  Vars: <type>, <variable>, [size]
    vl_api_address_t, collector_address
    u16, collector_port
    vl_api_address_t, src_address
    u32, vrf_id
    u32, path_mtu
    u32, template_interval
    bool, udp_checksum
  ------
  Method set_ipfix_exporter_reply:
  Vars: None
  ------
  Method ipfix_exporter_dump:
  Vars: None
  ------
  Method ipfix_exporter_details:
  Vars: <type>, <variable>, [size]
    u16, collector_port
    vl_api_address_t, src_address
    u32, vrf_id
    u32, path_mtu
    u32, template_interval
    bool, udp_checksum
  ------
  Method ipfix_exporter_create_delete:
  Vars: <type>, <variable>, [size]
    bool, is_create
    vl_api_address_t, collector_address
    u16, collector_port
    vl_api_address_t, src_address
    u32, vrf_id
    u32, path_mtu
    u32, template_interval
    bool, udp_checksum
  ------
  Method ipfix_exporter_create_delete_reply:
  Vars: <type>, <variable>, [size]
    u32, stat_index
  ------
  Method ipfix_all_exporter_get:
  Vars: <type>, <variable>, [size]
    u32, cursor
  ------
  Method ipfix_all_exporter_get_reply:
  Vars: <type>, <variable>, [size]
    u32, cursor
  ------
  Method ipfix_all_exporter_details:
  Vars: <type>, <variable>, [size]
    u16, collector_port
    vl_api_address_t, src_address
    u32, vrf_id
    u32, path_mtu
    u32, template_interval
    bool, udp_checksum
  ------
  Method set_ipfix_classify_stream:
  Vars: <type>, <variable>, [size]
    u32, domain_id
    u16, src_port
  ------
  Method set_ipfix_classify_stream_reply:
  Vars: None
  ------
  Method ipfix_classify_stream_dump:
  Vars: None
  ------
  Method ipfix_classify_stream_details:
  Vars: <type>, <variable>, [size]
    u16, src_port
  ------
  Method ipfix_classify_table_add_del:
  Vars: <type>, <variable>, [size]
    u32, table_id
    vl_api_address_family_t, ip_version
    vl_api_ip_proto_t, transport_protocol
    bool, is_add
  ------
  Method ipfix_classify_table_add_del_reply:
  Vars: None
  ------
  Method ipfix_classify_table_dump:
  Vars: None
  ------
  Method ipfix_classify_table_details:
  Vars: <type>, <variable>, [size]
    vl_api_address_family_t, ip_version
    vl_api_ip_proto_t, transport_protocol
  ------
  Method ipfix_flush:
  Vars: None
  ------
  Method ipfix_flush_reply:
  Vars: None

Module: crypto
  ------
  Method crypto_set_async_dispatch:
  Vars: <type>, <variable>, [size]
    vl_api_crypto_dispatch_mode_t, mode
  ------
  Method crypto_set_async_dispatch_reply:
  Vars: None
  ------
  Method crypto_set_handler:
  Vars: <type>, <variable>, [size]
    string, alg_name, 32
    string, engine, 16
    vl_api_crypto_op_class_type_t, oct
    u8, is_async
  ------
  Method crypto_set_handler_reply:
  Vars: None

Module: teib
  ------
  Method teib_entry_add_del:
  Vars: <type>, <variable>, [size]
    u8, is_add
    vl_api_teib_entry_t, entry
  ------
  Method teib_entry_add_del_reply:
  Vars: None
  ------
  Method teib_dump:
  Vars: None
  ------
  Method teib_details:
  Vars: None

Module: pipe
  ------
  Method pipe_create:
  Vars: <type>, <variable>, [size]
    bool, is_specified
    u32, user_instance
  ------
  Method pipe_create_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_interface_index_t, pipe_sw_if_index, 2
  ------
  Method pipe_delete:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method pipe_delete_reply:
  Vars: None
  ------
  Method pipe_dump:
  Vars: None
  ------
  Method pipe_details:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, pipe_sw_if_index, 2
    u32, instance

Module: interface
  ------
  Method sw_interface_set_flags:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_if_status_flags_t, flags
  ------
  Method sw_interface_set_flags_reply:
  Vars: None
  ------
  Method sw_interface_set_promisc:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, promisc_on
  ------
  Method sw_interface_set_promisc_reply:
  Vars: None
  ------
  Method hw_interface_set_mtu:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u16, mtu
  ------
  Method hw_interface_set_mtu_reply:
  Vars: None
  ------
  Method sw_interface_set_mtu:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, mtu, 4
  ------
  Method sw_interface_set_mtu_reply:
  Vars: None
  ------
  Method sw_interface_set_ip_directed_broadcast:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, enable
  ------
  Method sw_interface_set_ip_directed_broadcast_reply:
  Vars: None
  ------
  Method sw_interface_event:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_if_status_flags_t, flags
    bool, deleted
  ------
  Method want_interface_events:
  Vars: <type>, <variable>, [size]
    u32, enable_disable
    u32, pid
  ------
  Method want_interface_events_reply:
  Vars: None
  ------
  Method sw_interface_details:
  Vars: <type>, <variable>, [size]
    u32, sup_sw_if_index
    vl_api_mac_address_t, l2_address
    vl_api_if_status_flags_t, flags
    vl_api_if_type_t, type
    vl_api_link_duplex_t, link_duplex
    u32, link_speed
    u16, link_mtu
    u32, mtu, 4
    u32, sub_id
    u8, sub_number_of_tags
    u16, sub_outer_vlan_id
    u16, sub_inner_vlan_id
    vl_api_sub_if_flags_t, sub_if_flags
    u32, vtr_op
    u32, vtr_push_dot1q
    u32, vtr_tag1
    u32, vtr_tag2
    u16, outer_tag
    vl_api_mac_address_t, b_dmac
    vl_api_mac_address_t, b_smac
    u16, b_vlanid
    u32, i_sid
    string, interface_name, 64
    string, interface_dev_type, 64
    string, tag, 64
  ------
  Method sw_interface_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
    bool, name_filter_valid
    string, name_filter, 0
  ------
  Method sw_interface_add_del_address:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, is_add
    bool, del_all
    vl_api_address_with_prefix_t, prefix
  ------
  Method sw_interface_add_del_address_reply:
  Vars: None
  ------
  Method sw_interface_address_replace_begin:
  Vars: None
  ------
  Method sw_interface_address_replace_begin_reply:
  Vars: None
  ------
  Method sw_interface_address_replace_end:
  Vars: None
  ------
  Method sw_interface_address_replace_end_reply:
  Vars: None
  ------
  Method sw_interface_set_table:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, is_ipv6
    u32, vrf_id
  ------
  Method sw_interface_set_table_reply:
  Vars: None
  ------
  Method sw_interface_get_table:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, is_ipv6
  ------
  Method sw_interface_get_table_reply:
  Vars: <type>, <variable>, [size]
    u32, vrf_id
  ------
  Method sw_interface_set_unnumbered:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_interface_index_t, unnumbered_sw_if_index
    bool, is_add
  ------
  Method sw_interface_set_unnumbered_reply:
  Vars: None
  ------
  Method sw_interface_clear_stats:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method sw_interface_clear_stats_reply:
  Vars: None
  ------
  Method sw_interface_tag_add_del:
  Vars: <type>, <variable>, [size]
    bool, is_add
    vl_api_interface_index_t, sw_if_index
    string, tag, 64
  ------
  Method sw_interface_tag_add_del_reply:
  Vars: None
  ------
  Method sw_interface_add_del_mac_address:
  Vars: <type>, <variable>, [size]
    u32, sw_if_index
    vl_api_mac_address_t, addr
    u8, is_add
  ------
  Method sw_interface_add_del_mac_address_reply:
  Vars: None
  ------
  Method sw_interface_set_mac_address:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    vl_api_mac_address_t, mac_address
  ------
  Method sw_interface_set_mac_address_reply:
  Vars: None
  ------
  Method sw_interface_get_mac_address:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method sw_interface_get_mac_address_reply:
  Vars: <type>, <variable>, [size]
    vl_api_mac_address_t, mac_address
  ------
  Method sw_interface_set_rx_mode:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, queue_id_valid
    u32, queue_id
    vl_api_rx_mode_t, mode
  ------
  Method sw_interface_set_rx_mode_reply:
  Vars: None
  ------
  Method sw_interface_set_rx_placement:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, queue_id
    u32, worker_id
    bool, is_main
  ------
  Method sw_interface_set_rx_placement_reply:
  Vars: None
  ------
  Method sw_interface_set_tx_placement:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, queue_id
    u32, array_size
    u32, threads, 0
  ------
  Method sw_interface_set_tx_placement_reply:
  Vars: None
  ------
  Method sw_interface_set_interface_name:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    string, name, 64
  ------
  Method sw_interface_set_interface_name_reply:
  Vars: None
  ------
  Method sw_interface_rx_placement_dump:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method sw_interface_rx_placement_details:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, queue_id
    u32, worker_id
    vl_api_rx_mode_t, mode
  ------
  Method sw_interface_tx_placement_get:
  Vars: <type>, <variable>, [size]
    u32, cursor
    vl_api_interface_index_t, sw_if_index
  ------
  Method sw_interface_tx_placement_get_reply:
  Vars: <type>, <variable>, [size]
    u32, cursor
  ------
  Method sw_interface_tx_placement_details:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, queue_id
    u8, shared
    u32, array_size
    u32, threads, 0
  ------
  Method interface_name_renumber:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, new_show_dev_instance
  ------
  Method interface_name_renumber_reply:
  Vars: None
  ------
  Method create_subif:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, sub_id
    vl_api_sub_if_flags_t, sub_if_flags
    u16, outer_vlan_id
    u16, inner_vlan_id
  ------
  Method create_subif_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method create_vlan_subif:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    u32, vlan_id
  ------
  Method create_vlan_subif_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method delete_subif:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method delete_subif_reply:
  Vars: None
  ------
  Method create_loopback:
  Vars: <type>, <variable>, [size]
    vl_api_mac_address_t, mac_address
  ------
  Method create_loopback_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method create_loopback_instance:
  Vars: <type>, <variable>, [size]
    vl_api_mac_address_t, mac_address
    bool, is_specified
    u32, user_instance
  ------
  Method create_loopback_instance_reply:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method delete_loopback:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
  ------
  Method delete_loopback_reply:
  Vars: None
  ------
  Method collect_detailed_interface_stats:
  Vars: <type>, <variable>, [size]
    vl_api_interface_index_t, sw_if_index
    bool, enable_disable
  ------
  Method collect_detailed_interface_stats_reply:
  Vars: None

Module: session
  ------
  Method app_attach:
  Vars: <type>, <variable>, [size]
    u64, options, 18
    string, namespace_id, 0
  ------
  Method app_attach_reply:
  Vars: <type>, <variable>, [size]
    u64, app_mq
    u64, vpp_ctrl_mq
    u8, vpp_ctrl_mq_thread
    u32, app_index
    u8, n_fds
    u8, fd_flags
    u32, segment_size
    u64, segment_handle
    string, segment_name, 0
  ------
  Method application_detach:
  Vars: None
  ------
  Method application_detach_reply:
  Vars: None
  ------
  Method app_add_cert_key_pair:
  Vars: <type>, <variable>, [size]
    u16, cert_len
    u16, certkey_len
    u8, certkey, 0
  ------
  Method app_add_cert_key_pair_reply:
  Vars: <type>, <variable>, [size]
    u32, index
  ------
  Method app_del_cert_key_pair:
  Vars: <type>, <variable>, [size]
    u32, index
  ------
  Method app_del_cert_key_pair_reply:
  Vars: None
  ------
  Method application_tls_cert_add:
  Vars: <type>, <variable>, [size]
    u32, app_index
    u16, cert_len
    u8, cert, 0
  ------
  Method application_tls_cert_add_reply:
  Vars: None
  ------
  Method application_tls_key_add:
  Vars: <type>, <variable>, [size]
    u32, app_index
    u16, key_len
    u8, key, 0
  ------
  Method application_tls_key_add_reply:
  Vars: None
  ------
  Method app_worker_add_del:
  Vars: <type>, <variable>, [size]
    u32, app_index
    u32, wrk_index
    bool, is_add, {'default': 'true'}
  ------
  Method app_worker_add_del_reply:
  Vars: <type>, <variable>, [size]
    u32, wrk_index
    u64, app_event_queue_address
    u8, n_fds
    u8, fd_flags
    u64, segment_handle
    bool, is_add, {'default': 'true'}
    string, segment_name, 0
  ------
  Method session_enable_disable:
  Vars: <type>, <variable>, [size]
    bool, is_enable, {'default': 'true'}
  ------
  Method session_enable_disable_reply:
  Vars: None
  ------
  Method session_sapi_enable_disable:
  Vars: <type>, <variable>, [size]
    bool, is_enable, {'default': 'true'}
  ------
  Method session_sapi_enable_disable_reply:
  Vars: None
  ------
  Method app_namespace_add_del:
  Vars: <type>, <variable>, [size]
    u64, secret
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
    u32, ip4_fib_id
    u32, ip6_fib_id
    string, namespace_id, 0
  ------
  Method app_namespace_add_del_v2:
  Vars: <type>, <variable>, [size]
    u64, secret
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
    u32, ip4_fib_id
    u32, ip6_fib_id
    string, namespace_id, 64
    string, netns, 64
  ------
  Method app_namespace_add_del_v3:
  Vars: <type>, <variable>, [size]
    u64, secret
    bool, is_add, {'default': 'true'}
    vl_api_interface_index_t, sw_if_index, {'default': 4294967295}
    u32, ip4_fib_id
    u32, ip6_fib_id
    string, namespace_id, 64
    string, netns, 64
    string, sock_name, 0
  ------
  Method app_namespace_add_del_reply:
  Vars: <type>, <variable>, [size]
    u32, appns_index
  ------
  Method app_namespace_add_del_v2_reply:
  Vars: <type>, <variable>, [size]
    u32, appns_index
  ------
  Method app_namespace_add_del_v3_reply:
  Vars: <type>, <variable>, [size]
    u32, appns_index
  ------
  Method session_rule_add_del:
  Vars: <type>, <variable>, [size]
    vl_api_transport_proto_t, transport_proto
    vl_api_prefix_t, lcl
    vl_api_prefix_t, rmt
    u16, lcl_port
    u16, rmt_port
    u32, action_index
    bool, is_add, {'default': 'true'}
    u32, appns_index
    vl_api_session_rule_scope_t, scope
    string, tag, 64
  ------
  Method session_rule_add_del_reply:
  Vars: None
  ------
  Method session_rules_dump:
  Vars: None
  ------
  Method session_rules_details:
  Vars: <type>, <variable>, [size]
    vl_api_prefix_t, lcl
    vl_api_prefix_t, rmt
    u16, lcl_port
    u16, rmt_port
    u32, action_index
    u32, appns_index
    vl_api_session_rule_scope_t, scope
    string, tag, 64
